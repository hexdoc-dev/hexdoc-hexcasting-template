modid = "{{ modid }}"
book = "{{ patchouli_book_id }}"

resource_dirs = [  # top takes priority
    "resources",
{% if multiloader %}
    "{$_common.src}/main/resources",
    { path="{$_common.src}/generated/resources", required=false },
    "{$_fabric.src}/main/resources",
    { path="{$_fabric.src}/generated/resources", required=false },
    "{$_forge.src}/main/resources",
    { path="{$_forge.src}/generated/resources", required=false },
{% else %}
    "{$_project.src}/main/resources",
    { path="{$_project.src}/generated/resources", required=false },
{% endif %}
    { modid="hexcasting" },
    { modid="minecraft" },
    { modid="hexdoc" },
]
export_dir = "src/{{ package_slug }}/_export/generated"

[template]
# TODO: change this to point to your actual mod icon
icon = "icon.png"
include = [
    "{{ modid }}",
    "hexcasting",
    "hexdoc",
]

[template.args]
mod_name = "{{ mod_display_name }}"
author = "{{ github_user }}"
show_landing_text = false

[extra.hexcasting]
# regexes for parsing pattern registry files - if some or all of your patterns aren't being detected by hexdoc, this may need to be updated
# NOTE: "!Raw" means "don't apply variable interpolation to this value"
{% if minecraft_version == '1.20.1' %}
_pattern_regex = { "!Raw"='make\(\s*"(?P<name>[a-zA-Z0-9_\/]+)",\s*(?:new )?(?:ActionRegistryEntry|OperationAction)\(\s*HexPattern\.fromAngles\(\s*"(?P<signature>[aqweds]+)",\s*HexDir.(?P<startdir>\w+)\)' }
{% else %}
_pattern_regex = { "!Raw"='HexPattern\.fromAngles\("(?P<signature>[qweasd]+)", HexDir\.(?P<startdir>\w+)\),\s*modLoc\("(?P<name>[^"]+)"\)[^;]+?(?:makeConstantOp|Op\w+|Widget\.\w+)(?:[^;]*(?P<is_per_world>true)\);)?' }
_per_world_value = "true"
{% endif %}

[[extra.hexcasting.pattern_stubs]]
path = "{{ '{$_common.src}' if multiloader else '{$_project.src}' }}/{{ pattern_registry_path }}"
regex = "{^_pattern_regex}"
{% if minecraft_version == "1.19.2" %}
per_world_value = "{^_per_world_value}"
{% endif %}

# source paths

{% if multiloader %}
[_common]
src = "../{{ common_path }}/src"

[_fabric]
src = "../{{ fabric_path }}/src"

[_forge]
src = "../{{ forge_path }}/src"
{% else %}
[_project]
src = "../src"
{% endif %}
