# Copier settings (not prompted)

_subdirectory: template

# mod name and id

modid:
  type: str

mod_display_name: "{{ modid|capitalize }}"

book_id: "hexcasting:thehexbook"

# hexdoc plugin

package_name: "hexdoc-{{ modid|replace('_', '-')|lower }}"

package_slug: "hexdoc_{{ modid|replace('-', '_')|lower }}"

package_src: "doc/src/{{ package_slug }}"

package_export_root: "{{ package_src }}/_export"

hexdoc_plugin_classname: "{{ modid|capitalize }}Plugin"

hexdoc_mod_plugin_classname: "{{ modid|capitalize }}ModPlugin"

# mod structure

multiloader:
  type: bool
  default: true

gradle_mod_version_key: "modVersion"

java_lang:
  type: yaml
  choices:
    Java:
      value:
        src: java
        ext: java
    Kotlin:
      value:
        src: kotlin
        ext: kt

java_package: "com/example/{{ modid }}"

pattern_registry: "registry/{{ modid|capitalize }}PatternRegistry.{{ java_lang.ext }}"

pattern_regex:
  type: str
  choices:
    Hex Casting (1.20):
      value: 'make\(\s*"(?P<name>[a-zA-Z0-9_\/]+)",\s*(?:new )?(?:ActionRegistryEntry|OperationAction)\(\s*HexPattern\.fromAngles\(\s*"(?P<signature>[aqweds]+)",\s*HexDir.(?P<startdir>\w+)\)'
    Hex Casting (1.19):
      value: 'HexPattern\.fromAngles\("(?P<signature>[qweasd]+)", HexDir\.(?P<startdir>\w+)\),\s*modLoc\("(?P<name>[^"]+)"\)[^;]+?(?:makeConstantOp|Op\w+|Widget\.\w+)(?:[^;]*(?P<is_per_world>true)\);)?'
    Hexal (1.20):
      value: 'make\(\s*"(?P<name>[a-zA-Z0-9_\/]+)",\s*HexPattern\.fromAngles\(\s*"(?P<signature>[aqweds]+)",\s*HexDir.(?P<startdir>\w+)\)'
    Hexal (1.19):
      value: (?s-m:HexPattern\.fromAngles\("(?P<signature>[qweasd]+)", HexDir\.(?P<startdir>\w+)\),\s*modLoc\("(?P<name>[^"]+)"\),[^,]+?(?:makeConstantOp|Op\w+).*?(?P<is_per_world>\btrue)?\)(?:[^\)]+?\bval\b|(?:(?!\bval\b)(?:.))+$))

# GitHub

github_repo: "{{ modid|capitalize }}"

author: TODO

main_branch: main

pages_url: "https://{{ author|lower }}.github.io/{{ github_repo }}/"
